# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
    - develop
    - main

variables:
  - group: banking-app-variables
  # Dev Environment
  - name: devAppName
    value: 'banking-app-dev'
  - name: devResourceGroup
    value: 'banking-rg-dev'
  # Prod Environment
  - name: prodAppName
    value: 'banking-app-prod'
  - name: prodResourceGroup
    value: 'banking-rg-prod'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '17'
    
    - task: CopyFiles@2
      inputs:
        Contents: 'target/*.jar'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: DeployToDev
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Pay-As-You-Go'
              appName: $(devAppName)
              resourceGroupName: $(devResourceGroup)
              package: '$(Pipeline.Workspace)/drop/*.jar'
              appSettings: |
                -SPRING_PROFILES_ACTIVE=dev
                -MONGODB_URI=$(DEV_MONGODB_URI)
                -JWT_SECRET=$(DEV_JWT_SECRET)

- stage: DeployToProd
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Pay-As-You-Go'
              appName: $(prodAppName)
              resourceGroupName: $(prodResourceGroup)
              package: '$(Pipeline.Workspace)/drop/*.jar'
              appSettings: |
                -SPRING_PROFILES_ACTIVE=prod
                -MONGODB_URI=$(PROD_MONGODB_URI)
                -JWT_SECRET=$(PROD_JWT_SECRET)
